[
    {
        "file_path": "79_DS-10_fix.py",
        "scope": "ReportResource",
        "lineno": 31,
        "args": [],
        "summarize": "User Input Sources: \n- The `on_get` method takes a `report_id` parameter, which could originate from a user, likely as part of an HTTP request path or query string.\n- The `on_post` method reads data from `req.stream`, which could contain JSON data sent by the user in an HTTP POST request.\n\nMain Functionality:\n- The `on_get` method: This method is responsible for handling HTTP GET requests. If a `report_id` is provided, it attempts to retrieve a report with that ID from `report_storage`. If found, it generates an HTML page to display the report's details (title, author, created date, and content), ensuring all content is properly escaped to prevent HTML injection. If the report is not found, it sets the response status to 404. If no `report_id` is provided, it returns a list of all reports in a format that can be serialized to JSON.\n- The `on_post` method: This method handles HTTP POST requests. It expects the request body to contain JSON data with a report's title, content, and optionally an author. It creates a new report in `report_storage` and returns the newly created report's ID in JSON format. If an error occurs during processing, it raises an HTTPBadRequest exception with an error message.\n\nOutputs / Return Values:\n- The `on_get` method returns an HTML page displaying the report details if a specific report is requested and found. If no `report_id` is provided, it returns a JSON-like structure containing all reports.\n- The `on_post` method returns a JSON object containing the ID of the newly created report. If an error occurs, it raises an HTTPBadRequest with a descriptive message.",
        "potential_vul_types": [
            "CodeInjection",
            "XSS",
            "CommandInjection"
        ]
    },
    {
        "file_path": "79_DS-10_fix.py",
        "scope": "ReportFormResource",
        "lineno": 87,
        "args": [],
        "summarize": "User Input Sources:  \nThe function does not directly take input from the user in its method. However, the HTML form generated by the `on_get` method expects user input through the form fields: \"title,\" \"content,\" and \"author.\" These inputs are submitted via a JavaScript `fetch` call to the server endpoint '/reports' as a JSON object.\n\nMain Functionality:  \nThe `on_get` method of the `ReportFormResource` class is responsible for serving an HTML page containing a form for creating a new report. The form includes fields for the report's title, content, and author. When the form is submitted, JavaScript captures the input data and sends it as a JSON object to a server endpoint ('/reports') using an asynchronous POST request.\n\nOutputs / Return Values:  \nThe method sets the HTTP response's content type to 'text/html' and returns an HTML page. This page includes a form and embedded JavaScript for handling form submission. Upon form submission, the JavaScript fetches a JSON response from the server, which includes a report ID, and updates the HTML to provide a link to view the newly created report.",
        "potential_vul_types": [
            "PathTraversal",
            "XSS"
        ]
    }
]